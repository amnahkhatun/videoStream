{"ast":null,"code":"var _jsxFileName = \"/Users/sanarukhsar/Desktop/streams/client/src/components/streams/StreamEdit.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStream, editStream } from \"../../actions\";\nimport StreamForm from \"./StreamForm\";\n\nclass StreamEdit extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {\n      this.props.createStream(formValues);\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, \"Edit a Stream\"), /*#__PURE__*/React.createElement(StreamForm, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  editStream\n})(StreamEdit);","map":{"version":3,"sources":["/Users/sanarukhsar/Desktop/streams/client/src/components/streams/StreamEdit.js"],"names":["React","connect","fetchStream","editStream","StreamForm","StreamEdit","Component","onSubmit","formValues","props","createStream","componentDidMount","match","params","id","render","stream","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,eAAxC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAIvCC,QAJuC,GAI5BC,UAAU,IAAI;AACvB,WAAKC,KAAL,CAAWC,YAAX,CAAwBF,UAAxB;AACD,KANsC;AAAA;;AACvCG,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,KAAL,CAAWP,WAAX,CAAuB,KAAKO,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;AAIDC,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKN,KAAL,CAAWO,MAAhB,EAAwB;AACtB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;AACD,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAE,KAAKT,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAjBsC;;AAmBzC,MAAMU,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AACLH,IAAAA,MAAM,EAAEE,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACP,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AADH,GAAP;AAGD,CAJD;;AAMA,eAAeb,OAAO,CAACgB,eAAD,EAAkB;AAAEf,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAlB,CAAP,CACbE,UADa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStream, editStream } from \"../../actions\";\nimport StreamForm from \"./StreamForm\";\n\nclass StreamEdit extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n  onSubmit = formValues => {\n    this.props.createStream(formValues);\n  };\n  render() {\n    if (!this.props.stream) {\n      return <div>Loading...</div>;\n    }\n    return (\n      <div>\n        <h3>Edit a Stream</h3>\n        <StreamForm onSubmit={this.onSubmit}></StreamForm>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, { fetchStream, editStream })(\n  StreamEdit\n);\n"]},"metadata":{},"sourceType":"module"}