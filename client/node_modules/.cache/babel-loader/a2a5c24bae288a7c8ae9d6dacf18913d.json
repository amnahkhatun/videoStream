{"ast":null,"code":"var _jsxFileName = \"/Users/sanarukhsar/Desktop/streams/client/src/components/streams/StreamList.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStreams } from \"../../actions\";\nimport { Link } from \"react-router-dom\";\n\nclass StreamList extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderCreate = () => {\n      if (this.props.isSignedIn) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            textAlign: \"right\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: \"/streams/new\",\n          className: \"ui button primary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }\n        }, \"Create Stream\"));\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderAdmin(stream) {\n    // console.log(stream.userId, \"kjkj\");\n    // console.log(this.props.currentUserId, \"dsds\");\n    // if (stream.userId === this.props.currentUserId) {\n    console.log(stream.id, \"id\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"right floated content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/streams/edit/${stream.id}`,\n      className: \"ui button primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ui button negative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, \"Delete\")); // }\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"large middle aligned icon camera\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }, stream.title, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, stream.description)), this.renderAdmin(stream));\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, \"Streams\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui celled list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, this.renderList()), this.renderCreate());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/Users/sanarukhsar/Desktop/streams/client/src/components/streams/StreamList.js"],"names":["React","connect","fetchStreams","Link","StreamList","Component","renderCreate","props","isSignedIn","textAlign","componentDidMount","renderAdmin","stream","console","log","id","renderList","streams","map","title","description","render","mapStateToProps","state","Object","values","currentUserId","auth","userId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAoCvCC,YApCuC,GAoCxB,MAAM;AACnB,UAAI,KAAKC,KAAL,CAAWC,UAAf,EAA2B;AACzB,4BACE;AAAK,UAAA,KAAK,EAAE;AAAEC,YAAAA,SAAS,EAAE;AAAb,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAC,cAAT;AAAwB,UAAA,SAAS,EAAC,mBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF;AAOD;AACF,KA9CsC;AAAA;;AACvCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKH,KAAL,CAAWL,YAAX;AACD;;AAEDS,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClB;AACA;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,EAAnB,EAAuB,IAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,iBAAgBH,MAAM,CAACG,EAAG,EAArC;AAAwC,MAAA,SAAS,EAAC,mBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,MAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,CADF,CALkB,CAalB;AACD;;AAEDC,EAAAA,UAAU,GAAG;AACX,WAAO,KAAKT,KAAL,CAAWU,OAAX,CAAmBC,GAAnB,CAAuBN,MAAM,IAAI;AACtC,0BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,SAAS,EAAC,kCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,MAAM,CAACO,KADV,eAEE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8BP,MAAM,CAACQ,WAArC,CAFF,CAFF,EAMG,KAAKT,WAAL,CAAiBC,MAAjB,CANH,CADF;AAUD,KAXM,CAAP;AAYD;;AAcDS,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiC,KAAKL,UAAL,EAAjC,CAFF,EAGG,KAAKV,YAAL,EAHH,CADF;AAOD;;AAxDsC;;AA2DzC,MAAMgB,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLN,IAAAA,OAAO,EAAEO,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACN,OAApB,CADJ;AAELS,IAAAA,aAAa,EAAEH,KAAK,CAACI,IAAN,CAAWC,MAFrB;AAGLpB,IAAAA,UAAU,EAAEe,KAAK,CAACI,IAAN,CAAWnB;AAHlB,GAAP;AAKD,CAND;;AAQA,eAAeP,OAAO,CAACqB,eAAD,EAAkB;AAAEpB,EAAAA;AAAF,CAAlB,CAAP,CAA2CE,UAA3C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStreams } from \"../../actions\";\nimport { Link } from \"react-router-dom\";\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderAdmin(stream) {\n    // console.log(stream.userId, \"kjkj\");\n    // console.log(this.props.currentUserId, \"dsds\");\n    // if (stream.userId === this.props.currentUserId) {\n    console.log(stream.id, \"id\");\n    return (\n      <div className=\"right floated content\">\n        <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">\n          Edit\n        </Link>\n        <button className=\"ui button negative\">Delete</button>\n      </div>\n    );\n    // }\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return (\n        <div className=\"item\">\n          <i className=\"large middle aligned icon camera\"></i>\n          <div className=\"content\">\n            {stream.title}\n            <div className=\"description\">{stream.description}</div>\n          </div>\n          {this.renderAdmin(stream)}\n        </div>\n      );\n    });\n  }\n\n  renderCreate = () => {\n    if (this.props.isSignedIn) {\n      return (\n        <div style={{ textAlign: \"right\" }}>\n          <Link to=\"/streams/new\" className=\"ui button primary\">\n            Create Stream\n          </Link>\n        </div>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h2>Streams</h2>\n        <div className=\"ui celled list\">{this.renderList()}</div>\n        {this.renderCreate()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, { fetchStreams })(StreamList);\n"]},"metadata":{},"sourceType":"module"}