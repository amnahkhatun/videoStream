{"ast":null,"code":"var _jsxFileName = \"/Users/sanarukhsar/Desktop/streams/client/src/components/GoogleAuth.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn, signOut } from \"../actions\";\n\nclass GoogleAuth extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderAuthButton = () => {\n      if (this.props.isSignedIn === null) return null;else if (this.props.isSignedIn) return /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.auth.signOut(),\n        className: \"ui red google button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"google icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }\n      }), \"Sign Out\");else return /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.auth.signIn(),\n        className: \"ui red google button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"google icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }), \"Sign in\");\n    };\n\n    this.onAuthChange = isSignedIn => {\n      if (isSignedIn) {\n        this.props.signIn();\n      } else {\n        this.props.signOut();\n      }\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load(\"client:auth2\", () => {\n      window.gapi.client.init({\n        clientId: \"514680687151-9q89f01sbgm0lrsrur9qe3efqo5anj0k.apps.googleusercontent.com\",\n        scope: \"email\"\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.onAuthChange(this.auth.isSignedIn);\n        this.auth.isSignedIn.listen(this.onAuthChange); //whenever user's status changes call onAuthChange\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 12\n      }\n    }, this.renderAuthButton());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: this.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn,\n  signOut\n})(GoogleAuth);","map":{"version":3,"sources":["/Users/sanarukhsar/Desktop/streams/client/src/components/GoogleAuth.js"],"names":["React","Component","connect","signIn","signOut","GoogleAuth","renderAuthButton","props","isSignedIn","auth","onAuthChange","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","render","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,YAAhC;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAiBjCK,gBAjBiC,GAiBd,MAAM;AACvB,UAAI,KAAKC,KAAL,CAAWC,UAAX,KAA0B,IAA9B,EAAoC,OAAO,IAAP,CAApC,KACK,IAAI,KAAKD,KAAL,CAAWC,UAAf,EACH,oBACE;AACE,QAAA,OAAO,EAAE,MAAM,KAAKC,IAAL,CAAUL,OAAV,EADjB;AAEE,QAAA,SAAS,EAAC,sBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAIE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,aADF,CADG,KAWH,oBACE;AACE,QAAA,OAAO,EAAE,MAAM,KAAKK,IAAL,CAAUN,MAAV,EADjB;AAEE,QAAA,SAAS,EAAC,sBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAIE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,YADF;AASH,KAvCgC;;AAAA,SAyCjCO,YAzCiC,GAyClBF,UAAU,IAAI;AAC3B,UAAIA,UAAJ,EAAgB;AACd,aAAKD,KAAL,CAAWJ,MAAX;AACD,OAFD,MAEO;AACL,aAAKI,KAAL,CAAWH,OAAX;AACD;AACF,KA/CgC;AAAA;;AACjCO,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACrCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CACGC,IADH,CACQ;AACJC,QAAAA,QAAQ,EACN,0EAFE;AAGJC,QAAAA,KAAK,EAAE;AAHH,OADR,EAMGC,IANH,CAMQ,MAAM;AACV,aAAKV,IAAL,GAAYG,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ;AACA,aAAKX,YAAL,CAAkB,KAAKD,IAAL,CAAUD,UAA5B;AACA,aAAKC,IAAL,CAAUD,UAAV,CAAqBc,MAArB,CAA4B,KAAKZ,YAAjC,EAHU,CAGsC;AACjD,OAVH;AAWD,KAZD;AAaD;;AAkCDa,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKjB,gBAAL,EAAN,CAAP;AACD;;AAnDgC;;AAsDnC,MAAMkB,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLjB,IAAAA,UAAU,EAAE,KAAKC,IAAL,CAAUD;AADjB,GAAP;AAGD,CAJD;;AAMA,eAAeN,OAAO,CAACsB,eAAD,EAAkB;AAAErB,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAlB,CAAP,CAA8CC,UAA9C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { signIn, signOut } from \"../actions\";\n\nclass GoogleAuth extends Component {\n  componentDidMount() {\n    window.gapi.load(\"client:auth2\", () => {\n      window.gapi.client\n        .init({\n          clientId:\n            \"514680687151-9q89f01sbgm0lrsrur9qe3efqo5anj0k.apps.googleusercontent.com\",\n          scope: \"email\"\n        })\n        .then(() => {\n          this.auth = window.gapi.auth2.getAuthInstance();\n          this.onAuthChange(this.auth.isSignedIn);\n          this.auth.isSignedIn.listen(this.onAuthChange); //whenever user's status changes call onAuthChange\n        });\n    });\n  }\n\n  renderAuthButton = () => {\n    if (this.props.isSignedIn === null) return null;\n    else if (this.props.isSignedIn)\n      return (\n        <button\n          onClick={() => this.auth.signOut()}\n          className=\"ui red google button\"\n        >\n          <i className=\"google icon\"></i>\n          Sign Out\n        </button>\n      );\n    else\n      return (\n        <button\n          onClick={() => this.auth.signIn()}\n          className=\"ui red google button\"\n        >\n          <i className=\"google icon\"></i>\n          Sign in\n        </button>\n      );\n  };\n\n  onAuthChange = isSignedIn => {\n    if (isSignedIn) {\n      this.props.signIn();\n    } else {\n      this.props.signOut();\n    }\n  };\n\n  render() {\n    return <div>{this.renderAuthButton()}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: this.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);\n"]},"metadata":{},"sourceType":"module"}